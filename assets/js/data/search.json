[ { "title": "[3/3] Réaliser sa propre physique pour du Pixel Art", "url": "/posts/Pixel-perfect-physics-3/", "categories": "2D, Physic", "tags": "", "date": "2021-04-10 00:00:00 +0200", "snippet": "[3/3] Les SolidesMaintenant que nous en avons terminé avec les Acteurs, il est temps de s’attaquer au deuxième type d’entité : les Solides.Ce que j’appelle un Solide, c’est une entité qui se déplace de façon impartiale, sans prendre en compte sans environnement.La seule chose qu’un Solide fait, ..." }, { "title": "[2/3] Réaliser sa propre physique pour du Pixel Art", "url": "/posts/Pixel-perfect-physics-2/", "categories": "2D, Physic", "tags": "", "date": "2021-04-09 00:00:00 +0200", "snippet": "[2/3] Les ActeursDans le précédent article, j’ai plusieurs fois parler d’Acteur, en fait un Acteur désigne une entité qui va se déplacer dans la scènetout en collisionant avec les autres boîtes de collisions. Par exemple Mario serait un Acteur, un Goomba aussi.Personnellement je crée une class a..." }, { "title": "[1/3] Réaliser sa propre physique pour du Pixel Art", "url": "/posts/Pixel-perfect-physics-1/", "categories": "2D, Physic", "tags": "", "date": "2021-04-08 00:00:00 +0200", "snippet": "[1/3] Intro &amp;amp; AABBLorsqu’on souhaite réaliser un jeu en 2D sur Unity, on peut se laisser tenter par son système de Physique et de Collisions.Malheureusement il est assez laborieux d’avoir un résultat convaincant avec, surtout lorsqu’on développe un Platformer.Maintenant il est toujours p..." } ]
